<resources>
    
<string name="edgeFragmentShader"><![CDATA[
#extension GL_OES_EGL_image_external : enable\n

varying highp vec2 uv2;
uniform samplerExternalOES texture;
uniform highp vec2 duv;

highp float luma(highp vec2 pos) {
  return dot(texture2D(texture, pos).rgb, vec3(0.2126, 0.7152, 0.0722));
}

highp vec4 pix(highp float val) {
  return vec4(val, val, val, 1);
}

highp float diff(highp vec2 pos, highp vec2 dpos) {
  return luma(pos + dpos) - luma(pos - dpos);
}

highp float grad(highp vec2 pos, highp vec2 dpos) {
  return pow(pow(diff(pos, vec2(dpos.x, 0)), 2.0) + pow(diff(pos, vec2(0, dpos.y)), 2.0), 0.5);
}

void main() {
  gl_FragColor = pix(grad(uv2, duv));
}

/*
highp float edge(highp vec2 pos, highp vec2 dpos) {
  medp float y0 = luma(pos - vec2(1.5 * dpos.x, 0));
  medp float y1 = luma(pos - vec2(0.5 * dpos.x, 0));
  medp float y2 = luma(pos + vec2(0.5 * dpos.x, 0));
  medp float y3 = luma(pos + vec2(1.5 * dpos.x, 0));
  medp float a0 = y3 - y2 + y1 - y0;
  medp float a1 = y0 - y1 - a0;
  medp float a2 = y2 - y0;
  medp float a3 = y1;
  highp vec2 subpos = mod(pos, dpos) / dpos;
}

void main() {
  gl_FragColor = pix(edge(uv2, duv));
}
*/
]]></string>

</resources>